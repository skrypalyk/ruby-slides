<section id="more-subject" class="slide">
  <h2>Subject</h2>
  spec/subject_spec.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    require "spec_helper"

    class Actor
      attr_accessor :name

      def initialize(name = "John")
        @name = name
      end
    end

    describe Actor do
      let(:name) { "Ivan" }

      context "without subject redefenition" do
        it { expect(subject.name).to eq 'John' }
      end

      context "with subject redefinition" do
        let(:actor) {  Actor.new(name) }
        subject { actor }

        it "has name" do
          expect(subject.name).to eq name
        end

        it { expect(subject.name).to eq name }
        it { expect(subject.name.length).to eq name.length }
      end

      context "with subject renaming" do
        subject(:actor) { Actor.new(name) }

        it "has name" do
          expect(actor.name).to eq name
        end
      end
    end
  </script>
  <script type="syntaxhighlighter" class="brush: bash">
    rspec spec/subject_spec.rb --format documentation

    Actor
      without subject redefenition
        should not be nil
        should eq "John"
      with subject redefinition
        has name
        should eq "Ivan"
        should eq 4
      with subject renaming
        has name


    Finished in 1.28 seconds
    6 examples, 0 failures
  </script>
</section>
